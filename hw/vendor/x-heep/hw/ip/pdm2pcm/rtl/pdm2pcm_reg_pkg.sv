// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package pdm2pcm_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 5;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic [15:0] q;} pdm2pcm_reg2hw_clkdividx_reg_t;

  typedef struct packed {
    struct packed {logic q;} enabl;
    struct packed {logic q;} clear;
  } pdm2pcm_reg2hw_control_reg_t;

  typedef struct packed {
    struct packed {logic q;} empty;
    struct packed {logic q;} fulll;
  } pdm2pcm_reg2hw_status_reg_t;

  typedef struct packed {logic [5:0] q;} pdm2pcm_reg2hw_cic_activated_stages_reg_t;

  typedef struct packed {logic [3:0] q;} pdm2pcm_reg2hw_cic_delay_comb_reg_t;

  typedef struct packed {logic [3:0] q;} pdm2pcm_reg2hw_decimcic_reg_t;

  typedef struct packed {
    struct packed {
      logic d;
      logic de;
    } empty;
    struct packed {
      logic d;
      logic de;
    } fulll;
  } pdm2pcm_hw2reg_status_reg_t;

  // Register -> HW type
  typedef struct packed {
    pdm2pcm_reg2hw_clkdividx_reg_t clkdividx;  // [33:18]
    pdm2pcm_reg2hw_control_reg_t control;  // [17:16]
    pdm2pcm_reg2hw_status_reg_t status;  // [15:14]
    pdm2pcm_reg2hw_cic_activated_stages_reg_t cic_activated_stages;  // [13:8]
    pdm2pcm_reg2hw_cic_delay_comb_reg_t cic_delay_comb;  // [7:4]
    pdm2pcm_reg2hw_decimcic_reg_t decimcic;  // [3:0]
  } pdm2pcm_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    pdm2pcm_hw2reg_status_reg_t status;  // [3:0]
  } pdm2pcm_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] PDM2PCM_CLKDIVIDX_OFFSET = 5'h0;
  parameter logic [BlockAw-1:0] PDM2PCM_CONTROL_OFFSET = 5'h4;
  parameter logic [BlockAw-1:0] PDM2PCM_STATUS_OFFSET = 5'h8;
  parameter logic [BlockAw-1:0] PDM2PCM_CIC_ACTIVATED_STAGES_OFFSET = 5'hc;
  parameter logic [BlockAw-1:0] PDM2PCM_CIC_DELAY_COMB_OFFSET = 5'h10;
  parameter logic [BlockAw-1:0] PDM2PCM_DECIMCIC_OFFSET = 5'h14;

  // Window parameters
  parameter logic [BlockAw-1:0] PDM2PCM_RXDATA_OFFSET = 5'h18;
  parameter int unsigned PDM2PCM_RXDATA_SIZE = 'h4;

  // Register index
  typedef enum int {
    PDM2PCM_CLKDIVIDX,
    PDM2PCM_CONTROL,
    PDM2PCM_STATUS,
    PDM2PCM_CIC_ACTIVATED_STAGES,
    PDM2PCM_CIC_DELAY_COMB,
    PDM2PCM_DECIMCIC
  } pdm2pcm_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] PDM2PCM_PERMIT[6] = '{
      4'b0011,  // index[0] PDM2PCM_CLKDIVIDX
      4'b0001,  // index[1] PDM2PCM_CONTROL
      4'b0001,  // index[2] PDM2PCM_STATUS
      4'b0001,  // index[3] PDM2PCM_CIC_ACTIVATED_STAGES
      4'b0001,  // index[4] PDM2PCM_CIC_DELAY_COMB
      4'b0001  // index[5] PDM2PCM_DECIMCIC
  };

endpackage

