
######## HARDWARE ON BOARD

#LEDs
set_property DRIVE 8 [get_ports led1]
set_property PACKAGE_PIN T2 [get_ports led1]

set_property DRIVE 8 [get_ports led2]
set_property PACKAGE_PIN T3 [get_ports led2]

set_property DRIVE 8 [get_ports led3]
set_property PACKAGE_PIN T4 [get_ports led3]

#Switch's
set_property PACKAGE_PIN J16 [get_ports j16_sel]
set_property PACKAGE_PIN K16 [get_ports k16_sel]
set_property PACKAGE_PIN L14 [get_ports l14_sel]
set_property PACKAGE_PIN K15 [get_ports k15_sel]
set_property PACKAGE_PIN R1 [get_ports pushbutton]

#PLL Connections
set_property PACKAGE_PIN N13 [get_ports pll_clk1]
#set_property PACKAGE_PIN E12 [get_ports pll_clk2]

######## 20-Pin Connector

#set_property PACKAGE_PIN T14 [get_ports tio_trigger] # UNUSED
set_property PACKAGE_PIN T14 [get_ports IO_0]

#set_property PACKAGE_PIN M16 [get_ports tio_clkout] # UNUSED
set_property PACKAGE_PIN M16 [get_ports IO_1]

set_property PACKAGE_PIN N14 [get_ports tio_clkin]

# Debug UART

set_property -dict {PACKAGE_PIN P16 IOSTANDARD LVCMOS33} [get_ports debug_heep_uart_tx]
set_property -dict {PACKAGE_PIN R16 IOSTANDARD LVCMOS33} [get_ports debug_heep_uart_rx]

####### USB Connector

set_property PACKAGE_PIN F5 [get_ports usb_clk]

set_property IOSTANDARD LVCMOS33 [get_ports *]
set_property PACKAGE_PIN A7 [get_ports {usb_data[0]}]
set_property PACKAGE_PIN B6 [get_ports {usb_data[1]}]
set_property PACKAGE_PIN D3 [get_ports {usb_data[2]}]
set_property PACKAGE_PIN E3 [get_ports {usb_data[3]}]
set_property PACKAGE_PIN F3 [get_ports {usb_data[4]}]
set_property PACKAGE_PIN B5 [get_ports {usb_data[5]}]
set_property PACKAGE_PIN K1 [get_ports {usb_data[6]}]
set_property PACKAGE_PIN K2 [get_ports {usb_data[7]}]

set_property PACKAGE_PIN F4 [get_ports {usb_addr[0]}]
set_property PACKAGE_PIN G5 [get_ports {usb_addr[1]}]
set_property PACKAGE_PIN J1 [get_ports {usb_addr[2]}]
set_property PACKAGE_PIN H1 [get_ports {usb_addr[3]}]
set_property PACKAGE_PIN H2 [get_ports {usb_addr[4]}]
set_property PACKAGE_PIN G1 [get_ports {usb_addr[5]}]
set_property PACKAGE_PIN G2 [get_ports {usb_addr[6]}]
set_property PACKAGE_PIN F2 [get_ports {usb_addr[7]}]
set_property PACKAGE_PIN E1 [get_ports {usb_addr[8]}]
set_property PACKAGE_PIN E2 [get_ports {usb_addr[9]}]
set_property PACKAGE_PIN D1 [get_ports {usb_addr[10]}]
set_property PACKAGE_PIN C1 [get_ports {usb_addr[11]}]
set_property PACKAGE_PIN K3 [get_ports {usb_addr[12]}]
set_property PACKAGE_PIN L2 [get_ports {usb_addr[13]}]
set_property PACKAGE_PIN J3 [get_ports {usb_addr[14]}]
set_property PACKAGE_PIN B2 [get_ports {usb_addr[15]}]
set_property PACKAGE_PIN C7 [get_ports {usb_addr[16]}]
set_property PACKAGE_PIN C6 [get_ports {usb_addr[17]}]
set_property PACKAGE_PIN D6 [get_ports {usb_addr[18]}]
set_property PACKAGE_PIN C4 [get_ports {usb_addr[19]}]
set_property PACKAGE_PIN D5 [get_ports {usb_addr[20]}]

set_property PACKAGE_PIN A4 [get_ports usb_rdn]
set_property PACKAGE_PIN C2 [get_ports usb_wrn]
set_property PACKAGE_PIN A3 [get_ports usb_cen]

set_property PACKAGE_PIN A5 [get_ports usb_trigger]


create_clock -period 50.000 -name usb_clk -waveform {0.000 5.000} [get_nets usb_clk]
create_clock -period 50.000 -name tio_clkin -waveform {0.000 5.000} [get_nets tio_clkin]
create_clock -period 50.000 -name pll_clk1 -waveform {0.000 5.000} [get_nets pll_clk1]

set_clock_groups -asynchronous -group [get_clocks usb_clk] -group [get_clocks {tio_clkin pll_clk1}]

# both input clocks have same properties so there is no point in doing timing analysis for both:
set_case_analysis 1 [get_pins U_clocks/CCLK_MUX/S]

# No spec for these, seems sensible:
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_addr]
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_data]
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_trigger]
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_cen]
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_rdn]
set_input_delay -clock usb_clk -add_delay 2.000 [get_ports usb_wrn]

set_input_delay -clock usb_clk -add_delay 0.000 [get_ports j16_sel]
set_input_delay -clock usb_clk -add_delay 0.000 [get_ports k16_sel]
set_input_delay -clock [get_clocks usb_clk] -add_delay 0.500 [get_ports pushbutton]
set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets pushbutton_IBUF]

set_output_delay -clock usb_clk 0.000 [get_ports led1]
set_output_delay -clock usb_clk 0.000 [get_ports led2]
set_output_delay -clock usb_clk 0.000 [get_ports led3]
set_output_delay -clock usb_clk 0.000 [get_ports usb_data]
set_output_delay -clock usb_clk 0.000 [get_ports IO_0]
set_output_delay -clock usb_clk 0.000 [get_ports IO_1]
set_false_path -to [get_ports led1]
set_false_path -to [get_ports led2]
set_false_path -to [get_ports led3]
set_false_path -to [get_ports usb_data]
set_false_path -to [get_ports IO_0]
set_false_path -to [get_ports IO_1]

set_input_delay -clock [get_clocks usb_clk] -add_delay 0.500 [get_ports debug_heep_uart_rx]
set_output_delay -clock [get_clocks usb_clk] -add_delay 0.500 [get_ports debug_heep_uart_tx]

set_property CFGBVS VCCO [current_design]
set_property CONFIG_VOLTAGE 3.3 [current_design]

set_property BITSTREAM.CONFIG.USR_ACCESS TIMESTAMP [current_design]
set_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]


set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[14]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[2]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[0]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[1]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[22]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[23]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[20]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[21]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[18]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[19]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[16]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[17]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[15]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[12]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[13]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[3]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[4]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[5]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[6]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[7]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[8]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[30]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[31]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[28]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[29]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[26]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[27]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[24]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[25]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[9]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[10]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_address_reg[31]_0[11]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[20]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[2]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[0]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[1]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[28]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[29]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[26]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[27]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[24]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[25]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[22]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[23]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[21]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[18]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[19]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[16]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[17]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[14]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[15]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[30]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[31]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[3]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[4]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[5]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[6]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[7]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[8]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[9]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[10]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[12]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[13]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_instruction_reg[31]_0[11]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[0]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[1]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[2]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[3]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[4]}]
set_property MARK_DEBUG true [get_nets {U_reg_aes/O_status_reg[7]_0[5]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[15]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[3]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[0]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[1]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[2]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[4]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[13]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[14]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[16]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[17]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[18]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[19]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[20]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[5]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[6]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[7]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[8]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[9]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[10]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[11]}]
set_property MARK_DEBUG true [get_nets {usb_addr_IBUF[12]}]
set_property MARK_DEBUG true [get_nets usb_wrn_IBUF]
set_property MARK_DEBUG true [get_nets usb_rdn_IBUF]
set_property MARK_DEBUG true [get_nets usb_cen_IBUF]
set_property MARK_DEBUG true [get_nets usb_clk_buf]
connect_debug_port u_ila_0/probe0 [get_nets [list {U_reg_aes/O_status_reg[7]_0[0]} {U_reg_aes/O_status_reg[7]_0[1]} {U_reg_aes/O_status_reg[7]_0[2]} {U_reg_aes/O_status_reg[7]_0[3]} {U_reg_aes/O_status_reg[7]_0[4]} {U_reg_aes/O_status_reg[7]_0[5]}]]
connect_debug_port u_ila_0/probe1 [get_nets [list {U_reg_aes/O_address_reg[31]_0[0]} {U_reg_aes/O_address_reg[31]_0[1]} {U_reg_aes/O_address_reg[31]_0[2]} {U_reg_aes/O_address_reg[31]_0[3]} {U_reg_aes/O_address_reg[31]_0[4]} {U_reg_aes/O_address_reg[31]_0[5]} {U_reg_aes/O_address_reg[31]_0[6]} {U_reg_aes/O_address_reg[31]_0[7]} {U_reg_aes/O_address_reg[31]_0[8]} {U_reg_aes/O_address_reg[31]_0[9]} {U_reg_aes/O_address_reg[31]_0[10]} {U_reg_aes/O_address_reg[31]_0[11]} {U_reg_aes/O_address_reg[31]_0[12]} {U_reg_aes/O_address_reg[31]_0[13]} {U_reg_aes/O_address_reg[31]_0[14]} {U_reg_aes/O_address_reg[31]_0[15]} {U_reg_aes/O_address_reg[31]_0[16]} {U_reg_aes/O_address_reg[31]_0[17]} {U_reg_aes/O_address_reg[31]_0[18]} {U_reg_aes/O_address_reg[31]_0[19]} {U_reg_aes/O_address_reg[31]_0[20]} {U_reg_aes/O_address_reg[31]_0[21]} {U_reg_aes/O_address_reg[31]_0[22]} {U_reg_aes/O_address_reg[31]_0[23]} {U_reg_aes/O_address_reg[31]_0[24]} {U_reg_aes/O_address_reg[31]_0[25]} {U_reg_aes/O_address_reg[31]_0[26]} {U_reg_aes/O_address_reg[31]_0[27]} {U_reg_aes/O_address_reg[31]_0[28]} {U_reg_aes/O_address_reg[31]_0[29]} {U_reg_aes/O_address_reg[31]_0[30]} {U_reg_aes/O_address_reg[31]_0[31]}]]
connect_debug_port u_ila_0/probe2 [get_nets [list {U_reg_aes/O_instruction_reg[31]_0[0]} {U_reg_aes/O_instruction_reg[31]_0[1]} {U_reg_aes/O_instruction_reg[31]_0[2]} {U_reg_aes/O_instruction_reg[31]_0[3]} {U_reg_aes/O_instruction_reg[31]_0[4]} {U_reg_aes/O_instruction_reg[31]_0[5]} {U_reg_aes/O_instruction_reg[31]_0[6]} {U_reg_aes/O_instruction_reg[31]_0[7]} {U_reg_aes/O_instruction_reg[31]_0[8]} {U_reg_aes/O_instruction_reg[31]_0[9]} {U_reg_aes/O_instruction_reg[31]_0[10]} {U_reg_aes/O_instruction_reg[31]_0[11]} {U_reg_aes/O_instruction_reg[31]_0[12]} {U_reg_aes/O_instruction_reg[31]_0[13]} {U_reg_aes/O_instruction_reg[31]_0[14]} {U_reg_aes/O_instruction_reg[31]_0[15]} {U_reg_aes/O_instruction_reg[31]_0[16]} {U_reg_aes/O_instruction_reg[31]_0[17]} {U_reg_aes/O_instruction_reg[31]_0[18]} {U_reg_aes/O_instruction_reg[31]_0[19]} {U_reg_aes/O_instruction_reg[31]_0[20]} {U_reg_aes/O_instruction_reg[31]_0[21]} {U_reg_aes/O_instruction_reg[31]_0[22]} {U_reg_aes/O_instruction_reg[31]_0[23]} {U_reg_aes/O_instruction_reg[31]_0[24]} {U_reg_aes/O_instruction_reg[31]_0[25]} {U_reg_aes/O_instruction_reg[31]_0[26]} {U_reg_aes/O_instruction_reg[31]_0[27]} {U_reg_aes/O_instruction_reg[31]_0[28]} {U_reg_aes/O_instruction_reg[31]_0[29]} {U_reg_aes/O_instruction_reg[31]_0[30]} {U_reg_aes/O_instruction_reg[31]_0[31]}]]

set_property MARK_DEBUG true [get_nets {bridge_new_address[3]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[1]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[9]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[5]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[11]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[8]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[15]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[13]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[17]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[19]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[3]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[1]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[5]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[23]}]
set_property MARK_DEBUG true [get_nets {bridge_status[5]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[21]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[27]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[25]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[31]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[29]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[8]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[15]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[13]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[19]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[17]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[21]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[25]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[29]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[31]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[27]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[23]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[9]}]
set_property MARK_DEBUG true [get_nets {bridge_status[1]}]
set_property MARK_DEBUG true [get_nets {bridge_status[3]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[11]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[18]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[6]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[7]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[2]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[0]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[4]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[10]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[7]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[14]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[12]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[18]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[16]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[2]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[0]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[4]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[6]}]
set_property MARK_DEBUG true [get_nets {bridge_status[0]}]
set_property MARK_DEBUG true [get_nets {bridge_status[2]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[20]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[22]}]
set_property MARK_DEBUG true [get_nets {bridge_status[7]}]
set_property MARK_DEBUG true [get_nets {bridge_status[4]}]
set_property MARK_DEBUG true [get_nets {bridge_status[6]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[26]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[24]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[30]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[28]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[14]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[12]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[16]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[20]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[24]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[28]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[30]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[26]}]
set_property MARK_DEBUG true [get_nets {bridge_instruction[22]}]
set_property MARK_DEBUG true [get_nets {bridge_new_address[10]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[0]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[1]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[2]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[3]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[4]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[5]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[6]}]
set_property MARK_DEBUG true [get_nets {usb_data_IBUF[7]}]
create_debug_core u_ila_0 ila
set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
set_property ALL_PROBE_SAME_MU_CNT 2 [get_debug_cores u_ila_0]
set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
set_property C_DATA_DEPTH 2048 [get_debug_cores u_ila_0]
set_property C_EN_STRG_QUAL true [get_debug_cores u_ila_0]
set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
set_property port_width 1 [get_debug_ports u_ila_0/clk]
connect_debug_port u_ila_0/clk [get_nets [list U_clocks/usb_clk_buf]]
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
set_property port_width 8 [get_debug_ports u_ila_0/probe0]
connect_debug_port u_ila_0/probe0 [get_nets [list {usb_data_IBUF[0]} {usb_data_IBUF[1]} {usb_data_IBUF[2]} {usb_data_IBUF[3]} {usb_data_IBUF[4]} {usb_data_IBUF[5]} {usb_data_IBUF[6]} {usb_data_IBUF[7]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe1]
set_property port_width 21 [get_debug_ports u_ila_0/probe1]
connect_debug_port u_ila_0/probe1 [get_nets [list {usb_addr_IBUF[0]} {usb_addr_IBUF[1]} {usb_addr_IBUF[2]} {usb_addr_IBUF[3]} {usb_addr_IBUF[4]} {usb_addr_IBUF[5]} {usb_addr_IBUF[6]} {usb_addr_IBUF[7]} {usb_addr_IBUF[8]} {usb_addr_IBUF[9]} {usb_addr_IBUF[10]} {usb_addr_IBUF[11]} {usb_addr_IBUF[12]} {usb_addr_IBUF[13]} {usb_addr_IBUF[14]} {usb_addr_IBUF[15]} {usb_addr_IBUF[16]} {usb_addr_IBUF[17]} {usb_addr_IBUF[18]} {usb_addr_IBUF[19]} {usb_addr_IBUF[20]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe2]
set_property port_width 8 [get_debug_ports u_ila_0/probe2]
connect_debug_port u_ila_0/probe2 [get_nets [list {bridge_status[0]} {bridge_status[1]} {bridge_status[2]} {bridge_status[3]} {bridge_status[4]} {bridge_status[5]} {bridge_status[6]} {bridge_status[7]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe3]
set_property port_width 32 [get_debug_ports u_ila_0/probe3]
connect_debug_port u_ila_0/probe3 [get_nets [list {bridge_new_address[0]} {bridge_new_address[1]} {bridge_new_address[2]} {bridge_new_address[3]} {bridge_new_address[4]} {bridge_new_address[5]} {bridge_new_address[6]} {bridge_new_address[7]} {bridge_new_address[8]} {bridge_new_address[9]} {bridge_new_address[10]} {bridge_new_address[11]} {bridge_new_address[12]} {bridge_new_address[13]} {bridge_new_address[14]} {bridge_new_address[15]} {bridge_new_address[16]} {bridge_new_address[17]} {bridge_new_address[18]} {bridge_new_address[19]} {bridge_new_address[20]} {bridge_new_address[21]} {bridge_new_address[22]} {bridge_new_address[23]} {bridge_new_address[24]} {bridge_new_address[25]} {bridge_new_address[26]} {bridge_new_address[27]} {bridge_new_address[28]} {bridge_new_address[29]} {bridge_new_address[30]} {bridge_new_address[31]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe4]
set_property port_width 32 [get_debug_ports u_ila_0/probe4]
connect_debug_port u_ila_0/probe4 [get_nets [list {bridge_instruction[0]} {bridge_instruction[1]} {bridge_instruction[2]} {bridge_instruction[3]} {bridge_instruction[4]} {bridge_instruction[5]} {bridge_instruction[6]} {bridge_instruction[7]} {bridge_instruction[8]} {bridge_instruction[9]} {bridge_instruction[10]} {bridge_instruction[11]} {bridge_instruction[12]} {bridge_instruction[13]} {bridge_instruction[14]} {bridge_instruction[15]} {bridge_instruction[16]} {bridge_instruction[17]} {bridge_instruction[18]} {bridge_instruction[19]} {bridge_instruction[20]} {bridge_instruction[21]} {bridge_instruction[22]} {bridge_instruction[23]} {bridge_instruction[24]} {bridge_instruction[25]} {bridge_instruction[26]} {bridge_instruction[27]} {bridge_instruction[28]} {bridge_instruction[29]} {bridge_instruction[30]} {bridge_instruction[31]}]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe5]
set_property port_width 1 [get_debug_ports u_ila_0/probe5]
connect_debug_port u_ila_0/probe5 [get_nets [list usb_cen_IBUF]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe6]
set_property port_width 1 [get_debug_ports u_ila_0/probe6]
connect_debug_port u_ila_0/probe6 [get_nets [list usb_clk_buf]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe7]
set_property port_width 1 [get_debug_ports u_ila_0/probe7]
connect_debug_port u_ila_0/probe7 [get_nets [list usb_rdn_IBUF]]
create_debug_port u_ila_0 probe
set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe8]
set_property port_width 1 [get_debug_ports u_ila_0/probe8]
connect_debug_port u_ila_0/probe8 [get_nets [list usb_wrn_IBUF]]
set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]
connect_debug_port dbg_hub/clk [get_nets usb_clk_buf]
